{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar encoding_1 = require(\"@iov/encoding\");\n\nvar bip39 = __importStar(require(\"bip39\"));\n\nvar pbkdf2_1 = require(\"pbkdf2\");\n\nvar unorm = __importStar(require(\"unorm\"));\n\nvar englishmnemonic_1 = require(\"./englishmnemonic\");\n\nvar Bip39 = /*#__PURE__*/function () {\n  function Bip39() {\n    _classCallCheck(this, Bip39);\n  }\n\n  _createClass(Bip39, null, [{\n    key: \"encode\",\n    value: function encode(entropy) {\n      var allowedEntropyLengths = [16, 20, 24, 28, 32];\n\n      if (allowedEntropyLengths.indexOf(entropy.length) === -1) {\n        throw new Error(\"invalid input length\");\n      }\n\n      return new englishmnemonic_1.EnglishMnemonic(bip39.entropyToMnemonic(encoding_1.Encoding.toHex(entropy)));\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(mnemonic) {\n      return encoding_1.Encoding.fromHex(bip39.mnemonicToEntropy(mnemonic.toString()));\n    }\n  }, {\n    key: \"mnemonicToSeed\",\n    value: function () {\n      var _mnemonicToSeed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(mnemonic, password) {\n        var mnemonicBytes, salt, saltBytes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // reimplementation of bip39.mnemonicToSeed using the asynchronous\n                // interface of https://www.npmjs.com/package/pbkdf2\n                mnemonicBytes = Buffer.from(unorm.nfkd(mnemonic.toString()), \"utf8\");\n                salt = \"mnemonic\" + (password ? unorm.nfkd(password) : \"\");\n                saltBytes = Buffer.from(salt, \"utf8\");\n                return _context.abrupt(\"return\", this.pbkdf2(mnemonicBytes, saltBytes, 2048, 64, \"sha512\"));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function mnemonicToSeed(_x, _x2) {\n        return _mnemonicToSeed.apply(this, arguments);\n      }\n\n      return mnemonicToSeed;\n    }() // convert pbkdf2's calllback interface to Promise interface\n\n  }, {\n    key: \"pbkdf2\",\n    value: function () {\n      var _pbkdf = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(secret, salt, iterations, keylen, digest) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  pbkdf2_1.pbkdf2(secret, salt, iterations, keylen, digest, function (err, derivedKey) {\n                    if (err) {\n                      reject(err);\n                    } else {\n                      resolve(new Uint8Array(derivedKey));\n                    }\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function pbkdf2(_x3, _x4, _x5, _x6, _x7) {\n        return _pbkdf.apply(this, arguments);\n      }\n\n      return pbkdf2;\n    }()\n  }]);\n\n  return Bip39;\n}();\n\nexports.Bip39 = Bip39;","map":{"version":3,"sources":["../src/bip39.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;IAEa,K;;;;;;;WACJ,gBAAc,OAAd,EAAiC;AACtC,UAAM,qBAAqB,GAAsB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAjD;;AAEA,UAAI,qBAAqB,CAAC,OAAtB,CAA8B,OAAO,CAAC,MAAtC,MAAkD,CAAC,CAAvD,EAA0D;AACxD,cAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,aAAO,IAAI,iBAAA,CAAA,eAAJ,CAAoB,KAAK,CAAC,iBAAN,CAAwB,UAAA,CAAA,QAAA,CAAS,KAAT,CAAe,OAAf,CAAxB,CAApB,CAAP;AACD;;;WAEM,gBAAc,QAAd,EAAuC;AAC5C,aAAO,UAAA,CAAA,QAAA,CAAS,OAAT,CAAiB,KAAK,CAAC,iBAAN,CAAwB,QAAQ,CAAC,QAAT,EAAxB,CAAjB,CAAP;AACD;;;;qFAEM,iBAA4B,QAA5B,EAAuD,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;AACA;AACM,gBAAA,aAHD,GAGiB,MAAM,CAAC,IAAP,CAAY,KAAK,CAAC,IAAN,CAAW,QAAQ,CAAC,QAAT,EAAX,CAAZ,EAA6C,MAA7C,CAHjB;AAIC,gBAAA,IAJD,GAIQ,cAAc,QAAQ,GAAG,KAAK,CAAC,IAAN,CAAW,QAAX,CAAH,GAA0B,EAAhD,CAJR;AAKC,gBAAA,SALD,GAKa,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,MAAlB,CALb;AAAA,iDAME,KAAK,MAAL,CAAY,aAAZ,EAA2B,SAA3B,EAAsC,IAAtC,EAA4C,EAA5C,EAAgD,QAAhD,CANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;QASP;;;;;4EACQ,kBACN,MADM,EAEN,IAFM,EAGN,UAHM,EAIN,MAJM,EAKN,MALM;AAAA;AAAA;AAAA;AAAA;AAAA,kDAOC,IAAI,OAAJ,CAAiB,UAAC,OAAD,EAAU,MAAV,EAAoB;AAC1C,kBAAA,QAAA,CAAA,MAAA,CAAO,MAAP,EAAe,IAAf,EAAqB,UAArB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,UAAC,GAAD,EAAW,UAAX,EAA8B;AAC7E,wBAAI,GAAJ,EAAS;AACP,sBAAA,MAAM,CAAC,GAAD,CAAN;AACD,qBAFD,MAEO;AACL,sBAAA,OAAO,CAAC,IAAI,UAAJ,CAAe,UAAf,CAAD,CAAP;AACD;AACF,mBAND;AAOD,iBARM,CAPD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAzBV,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst encoding_1 = require(\"@iov/encoding\");\nconst bip39 = __importStar(require(\"bip39\"));\nconst pbkdf2_1 = require(\"pbkdf2\");\nconst unorm = __importStar(require(\"unorm\"));\nconst englishmnemonic_1 = require(\"./englishmnemonic\");\nclass Bip39 {\n    static encode(entropy) {\n        const allowedEntropyLengths = [16, 20, 24, 28, 32];\n        if (allowedEntropyLengths.indexOf(entropy.length) === -1) {\n            throw new Error(\"invalid input length\");\n        }\n        return new englishmnemonic_1.EnglishMnemonic(bip39.entropyToMnemonic(encoding_1.Encoding.toHex(entropy)));\n    }\n    static decode(mnemonic) {\n        return encoding_1.Encoding.fromHex(bip39.mnemonicToEntropy(mnemonic.toString()));\n    }\n    static async mnemonicToSeed(mnemonic, password) {\n        // reimplementation of bip39.mnemonicToSeed using the asynchronous\n        // interface of https://www.npmjs.com/package/pbkdf2\n        const mnemonicBytes = Buffer.from(unorm.nfkd(mnemonic.toString()), \"utf8\");\n        const salt = \"mnemonic\" + (password ? unorm.nfkd(password) : \"\");\n        const saltBytes = Buffer.from(salt, \"utf8\");\n        return this.pbkdf2(mnemonicBytes, saltBytes, 2048, 64, \"sha512\");\n    }\n    // convert pbkdf2's calllback interface to Promise interface\n    static async pbkdf2(secret, salt, iterations, keylen, digest) {\n        return new Promise((resolve, reject) => {\n            pbkdf2_1.pbkdf2(secret, salt, iterations, keylen, digest, (err, derivedKey) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(new Uint8Array(derivedKey));\n                }\n            });\n        });\n    }\n}\nexports.Bip39 = Bip39;\n//# sourceMappingURL=bip39.js.map"]},"metadata":{},"sourceType":"script"}