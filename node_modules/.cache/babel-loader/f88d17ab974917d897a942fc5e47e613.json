{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bech32 = __importStar(require(\"bech32\"));\n\nvar Bech32 = /*#__PURE__*/function () {\n  function Bech32() {\n    _classCallCheck(this, Bech32);\n  }\n\n  _createClass(Bech32, null, [{\n    key: \"encode\",\n    value: function encode(prefix, data) {\n      var address = bech32.encode(prefix, bech32.toWords(data));\n      return address;\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(address) {\n      var decodedAddress = bech32.decode(address);\n      return {\n        prefix: decodedAddress.prefix,\n        data: new Uint8Array(bech32.fromWords(decodedAddress.words))\n      };\n    }\n  }]);\n\n  return Bech32;\n}();\n\nexports.Bech32 = Bech32;","map":{"version":3,"sources":["../src/bech32.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;IAEa,M;;;;;;;WACJ,gBAAc,MAAd,EAA8B,IAA9B,EAA8C;AACnD,UAAM,OAAO,GAAG,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,MAAM,CAAC,OAAP,CAAe,IAAf,CAAtB,CAAhB;AACA,aAAO,OAAP;AACD;;;WAEM,gBAAc,OAAd,EAA6B;AAClC,UAAM,cAAc,GAAG,MAAM,CAAC,MAAP,CAAc,OAAd,CAAvB;AACA,aAAO;AACL,QAAA,MAAM,EAAE,cAAc,CAAC,MADlB;AAEL,QAAA,IAAI,EAAE,IAAI,UAAJ,CAAe,MAAM,CAAC,SAAP,CAAiB,cAAc,CAAC,KAAhC,CAAf;AAFD,OAAP;AAID;;;;;;AAZH,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bech32 = __importStar(require(\"bech32\"));\nclass Bech32 {\n    static encode(prefix, data) {\n        const address = bech32.encode(prefix, bech32.toWords(data));\n        return address;\n    }\n    static decode(address) {\n        const decodedAddress = bech32.decode(address);\n        return {\n            prefix: decodedAddress.prefix,\n            data: new Uint8Array(bech32.fromWords(decodedAddress.words)),\n        };\n    }\n}\nexports.Bech32 = Bech32;\n//# sourceMappingURL=bech32.js.map"]},"metadata":{},"sourceType":"script"}