{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11;import React from\"react\";import{SigningCosmWasmClient}from\"secretjs\";import{useEffect,useState}from\"react\";import styled from\"styled-components\";import Countdown from\"react-countdown\";import{Button,CircularProgress,Snackbar}from\"@material-ui/core\";import Alert from\"@material-ui/lab/Alert\";import rabbit from\"./rabbit.png\";import mask from\"./mask.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MintButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  justify-content: center;\\n  background: #ea70ff !important;\\n\"])));// TODO: this needs to be a wallet connector\nvar ConnectButton=styled(Button)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  height: 50px;\\n  align-items: center;\\n  justify-content: center;\\n\"])));var CounterText=styled.span(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\"])));// add your styles here m8\nvar MintRoot=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  height: 100%;\\n  margin: auto;\\n  align-items: center;\\n  justify-content: center;\\n  background: #ffffff;\\n  text-align: center;\\n\"])));var MintButtonText=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding: 5px 50px;\\n\"])));var Spacer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  padding: 5rem;\\n\"])));var SmallSpacer=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  padding: 0.75rem;\\n\"])));// TODO: fix border-radius\nvar ImageContainer=styled.img(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  max-width: 200px;\\n  max-height: 200px;\\n  border-radius: 25px;\\n  padding: 0.75rem;\\n\"])));var Samples=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  @media only screen and (max-width: 600px) {\\n    flex-direction: column;\\n  }\\n\"])));var Logo=styled.img(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  max-width: 400px;\\n  max-height: 400px;\\n  @media only screen and (max-width: 600px) {\\n    max-width: 250px;\\n    max-height: 250px;\\n  }\\n\"])));var Text=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  max-width: 500px;\\n\"])));var CHAIN_ID=\"holodeck-2\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={keplrReady:false,account:null};return _this;}// TODO: do we want to display the user's account number and balance?\n// if so, we'll need to implement this properly. currently it doesn't work\n// because account can only be initialized after the wallet is connected (which\n// isn't necessarily after the base component mounts)\n_createClass(App,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var account;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// await this.setupKeplr();\naccount=\"test\";//await this.secretjs.getAccount(this.state.account.address);\nthis.setState({account:account});case 2:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"setupKeplr\",value:function(){var _setupKeplr=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var sleep,accounts;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// Define sleep\nsleep=function sleep(ms){return new Promise(function(accept){return setTimeout(accept,ms);});};// Wait for Keplr to be injected to the page\ncase 1:if(!(!window.keplr&&!window.getOfflineSigner&&!window.getEnigmaUtils)){_context2.next=6;break;}_context2.next=4;return sleep(10);case 4:_context2.next=1;break;case 6:_context2.next=8;return window.keplr.experimentalSuggestChain({chainId:CHAIN_ID,chainName:\"holodeck-2\",rpc:\"ttp://chainofsecrets.secrettestnet.io:26657\",rest:\"https://chainofsecrets.secrettestnet.io\",bip44:{coinType:529},coinType:529,stakeCurrency:{coinDenom:\"SCRT\",coinMinimalDenom:\"uscrt\",coinDecimals:6},bech32Config:{bech32PrefixAccAddr:\"secret\",bech32PrefixAccPub:\"secretpub\",bech32PrefixValAddr:\"secretvaloper\",bech32PrefixValPub:\"secretvaloperpub\",bech32PrefixConsAddr:\"secretvalcons\",bech32PrefixConsPub:\"secretvalconspub\"},currencies:[{coinDenom:\"SCRT\",coinMinimalDenom:\"uscrt\",coinDecimals:6}],feeCurrencies:[{coinDenom:\"SCRT\",coinMinimalDenom:\"uscrt\",coinDecimals:6}],gasPriceStep:{low:0.1,average:0.25,high:0.4},features:[\"secretwasm\"]});case 8:_context2.next=10;return window.keplr.enable(CHAIN_ID);case 10:// Setup SecrtJS with Keplr's OfflineSigner\n// This pops-up a window for the user to sign on each tx we sent\nthis.keplrOfflineSigner=window.getOfflineSigner(CHAIN_ID);_context2.next=13;return this.keplrOfflineSigner.getAccounts();case 13:accounts=_context2.sent;this.secretjs=new SigningCosmWasmClient(// TODO: use an env variable here\n\"https://chainofsecrets.secrettestnet.io\",// holodeck - https://chainofsecrets.secrettestnet.io; mainnet - user your LCD/REST provider local http://localhost:1337\naccounts[0].address,this.keplrOfflineSigner,window.getEnigmaUtils(CHAIN_ID),{// 300k - Max gas units we're willing to use for init\ninit:{amount:[{amount:\"300000\",denom:\"uscrt\"}],gas:\"300000\"},// 300k - Max gas units we're willing to use for exec\nexec:{amount:[{amount:\"300000\",denom:\"uscrt\"}],gas:\"300000\"}});this.setState({keplrReady:true,account:accounts[0]});case 16:case\"end\":return _context2.stop();}}},_callee2,this);}));function setupKeplr(){return _setupKeplr.apply(this,arguments);}return setupKeplr;}()},{key:\"onMint\",value:function(){var _onMint=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var _this2=this;var publicMetadata,privateMetadata,handleMsg,message;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:try{// 1. Define your metadata\npublicMetadata=\"No secrets here!\";privateMetadata=\"Ssshhhhhhh....\";// 2. Mint a new token to yourself\nhandleMsg={mint_nft:{owner:this.address,public_metadata:{name:publicMetadata},private_metadata:{name:privateMetadata}}};_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return window.keplr.enable(CHAIN_ID);case 2:console.log(\"Minting yourself a nft\");// TODO: use env variable for the contract address, like so\n// .execute(process.env.SECRET_NFT_CONTRACT, handleMsg)\n_context3.next=5;return _this2.secretjs.execute(\"secret1gwlhghp6a3pwc4a5nsw0ltua7mmqwdh4qy23qp\",handleMsg).catch(function(err){throw new Error(\"Could not execute contract: \".concat(err));});case 5:response=_context3.sent;console.log(\"response: \",response);if(response.code!==undefined&&response.code!==0){alert(\"Failed to mint NFT: \"+response.log||response.rawLog);}else{alert(\"NFT successfully minted: https://explorer.secrettestnet.io/transactions/\"+response.transactionHash);}case 8:case\"end\":return _context3.stop();}}},_callee3);}))();}catch(error){// TODO: blech:\nmessage=error.msg||\"Minting failed! Please try again!\";// TODO: handle errors\n//   if (!error.msg) {\n//     if (error.message.indexOf(\"0x138\")) {\n//     } else if (error.message.indexOf(\"0x137\")) {\n//       message = `SOLD OUT!`;\n//     } else if (error.message.indexOf(\"0x135\")) {\n//       message = `Insufficient funds to mint. Please fund your wallet.`;\n//     }\n//   } else {\n//     if (error.code === 311) {\n//       message = `SOLD OUT!`;\n//       setIsSoldOut(true);\n//     } else if (error.code === 312) {\n//       message = `Minting period hasn't started yet.`;\n//     }\n//   }\n//   setAlertState({\n//     open: true,\n//     message,\n//     severity: \"error\",\n//   });\n// } finally {\n//   setIsMinting(false);\n// }\n}case 1:case\"end\":return _context4.stop();}}},_callee4,this);}));function onMint(){return _onMint.apply(this,arguments);}return onMint;}()// TODO: break these components out into a more modular structure (low priority)\n},{key:\"render\",value:function render(){var _this3=this;// TODO: set these dynamically (hi pri)\n// true if there are no more NFTs\nvar isSoldOut=false;// set based on viewport width\nvar isMobile=false;var wallet=this.state.keplrReady;// true if the user clicked the mint button and the tx has been\n// sent, but not yet confirmed\nvar isMinting=false;// mint is active (open)\nvar isActive=true;// past start date\n// const startDate = 1635213600000;\n// future start date\nvar startDate=1635213600000;// number of NFTs left in the contract\nvar mintsRemaining=100;// if (!this.state.keplrReady) {\n//   return (\n//     <>\n//       <h1>Waiting for Keplr wallet integration...</h1>\n//     </>\n//   );\n// }\nvar account=/*#__PURE__*/_jsx(\"h1\",{children:\"Account: unknown\"});if(this.state.account){account=/*#__PURE__*/_jsxs(\"h1\",{children:[\"Account: \",this.state.account.address]});}var balance=/*#__PURE__*/_jsx(_Fragment,{children:\"Balance: 0 SCRT\"});try{balance=/*#__PURE__*/_jsxs(_Fragment,{children:[\"Balance:\",\" \",new Intl.NumberFormat(\"en-US\",{}).format(+this.state.account.balance[0].amount/1e6),\" \",\"SCRT\"]});}catch(e){}var renderCounter=function renderCounter(_ref2){var days=_ref2.days,hours=_ref2.hours,minutes=_ref2.minutes,seconds=_ref2.seconds,completed=_ref2.completed;return/*#__PURE__*/_jsxs(CounterText,{children:[days,\" days, \",hours,\" hours, \",minutes,\" minutes, \",seconds,\" seconds\"]});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(MintRoot,{children:[/*#__PURE__*/_jsx(SmallSpacer,{}),!isMobile?/*#__PURE__*/_jsx(Logo,{src:mask,alt:\"mask\"}):/*#__PURE__*/_jsx(Logo,{src:mask,alt:\"mask\"}),!isSoldOut?/*#__PURE__*/_jsx(\"h1\",{className:\"font-link\",children:\"Mints Live on November 12, 2021\"}):/*#__PURE__*/_jsx(\"h1\",{className:\"font-link\",children:\"Minting is over\"}),account,balance,!isMobile&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Samples,{children:[/*#__PURE__*/_jsx(ImageContainer,{src:rabbit,alt:\"rabbit\"}),/*#__PURE__*/_jsx(ImageContainer,{src:rabbit,alt:\"rabbit\"}),/*#__PURE__*/_jsx(ImageContainer,{src:rabbit,alt:\"rabbit\"})]})}),wallet&&!isSoldOut&&/*#__PURE__*/_jsx(Text,{children:/*#__PURE__*/_jsx(\"p\",{className:\"font-link\",children:\"1337 unique generative Redacted Rabbits.Secured by the SCRT network, stored on Arweave, implemented with the SNIP-721 standard.\"})}),wallet&&/*#__PURE__*/_jsxs(\"p\",{className:\"font-link\",children:[\"Remaining amount: \",(mintsRemaining||0).toLocaleString(),\" / 1337\"]}),wallet?/*#__PURE__*/_jsx(\"p\",{className:\"font-link\",children:\"Mint: 42 SCRT\"}):/*#__PURE__*/_jsx(\"h2\",{className:\"font-link\",children:\"Connect wallet to mint a Redacted Rabbit\"}),!wallet?/*#__PURE__*/_jsx(ConnectButton,{onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_this3.setupKeplr();case 1:case\"end\":return _context5.stop();}}},_callee5);})),children:/*#__PURE__*/_jsx(\"h3\",{className:\"font-link\",children:\"Connect Wallet\"})}):/*#__PURE__*/_jsx(MintButton,{disabled:isSoldOut||isMinting||!isActive,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return _this3.onMint();case 2:case\"end\":return _context6.stop();}}},_callee6);})),variant:\"contained\",children:isSoldOut?/*#__PURE__*/_jsx(MintButtonText,{className:\"font-link\",children:\"SOLD OUT\"}):isActive?isMinting?/*#__PURE__*/_jsx(CircularProgress,{}):/*#__PURE__*/_jsx(MintButtonText,{className:\"font-link\",children:\"MINT\"}):/*#__PURE__*/_jsx(Countdown,{date:startDate// TODO: countdown should switch to mint at startDate time\n// onMount={({ completed }) => completed && setIsActive(true)}\n// onComplete={() => setIsActive(true)}\n,onMount:function onMount(_ref5){var completed=_ref5.completed;return completed;},onComplete:function onComplete(){return null;},renderer:renderCounter})}),isMobile&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SmallSpacer,{}),/*#__PURE__*/_jsxs(Samples,{children:[/*#__PURE__*/_jsx(ImageContainer,{src:rabbit,alt:\"rabbit\"}),/*#__PURE__*/_jsx(ImageContainer,{src:rabbit,alt:\"rabbit\"}),/*#__PURE__*/_jsx(ImageContainer,{src:rabbit,alt:\"rabbit\"})]})]}),/*#__PURE__*/_jsx(Spacer,{})]})});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/aidansalzmann/redacted-mint/src/App.js"],"names":["React","SigningCosmWasmClient","useEffect","useState","styled","Countdown","Button","CircularProgress","Snackbar","Alert","rabbit","mask","MintButton","ConnectButton","CounterText","span","MintRoot","div","MintButtonText","Spacer","SmallSpacer","ImageContainer","img","Samples","Logo","Text","CHAIN_ID","App","props","state","keplrReady","account","setState","sleep","ms","Promise","accept","setTimeout","window","keplr","getOfflineSigner","getEnigmaUtils","experimentalSuggestChain","chainId","chainName","rpc","rest","bip44","coinType","stakeCurrency","coinDenom","coinMinimalDenom","coinDecimals","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","feeCurrencies","gasPriceStep","low","average","high","features","enable","keplrOfflineSigner","getAccounts","accounts","secretjs","address","init","amount","denom","gas","exec","publicMetadata","privateMetadata","handleMsg","mint_nft","owner","public_metadata","name","private_metadata","console","log","execute","catch","err","Error","response","code","undefined","alert","rawLog","transactionHash","error","message","msg","isSoldOut","isMobile","wallet","isMinting","isActive","startDate","mintsRemaining","balance","Intl","NumberFormat","format","e","renderCounter","days","hours","minutes","seconds","completed","toLocaleString","setupKeplr","onMint","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { SigningCosmWasmClient } from \"secretjs\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport rabbit from \"./rabbit.png\";\nimport mask from \"./mask.png\";\n\nconst MintButton = styled(Button)`\n  align-items: center;\n  justify-content: center;\n  background: #ea70ff !important;\n`;\n\n// TODO: this needs to be a wallet connector\nconst ConnectButton = styled(Button)`\n  display: flex;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CounterText = styled.span``; // add your styles here m8\n\nconst MintRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  margin: auto;\n  align-items: center;\n  justify-content: center;\n  background: #ffffff;\n  text-align: center;\n`;\n\nconst MintButtonText = styled.div`\n  padding: 5px 50px;\n`;\n\nconst Spacer = styled.div`\n  padding: 5rem;\n`;\n\nconst SmallSpacer = styled.div`\n  padding: 0.75rem;\n`;\n\n// TODO: fix border-radius\nconst ImageContainer = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n  border-radius: 25px;\n  padding: 0.75rem;\n`;\n\nconst Samples = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nconst Logo = styled.img`\n  max-width: 400px;\n  max-height: 400px;\n  @media only screen and (max-width: 600px) {\n    max-width: 250px;\n    max-height: 250px;\n  }\n`;\n\nconst Text = styled.div`\n  max-width: 500px;\n`;\n\nconst CHAIN_ID = \"holodeck-2\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { keplrReady: false, account: null };\n  }\n\n  // TODO: do we want to display the user's account number and balance?\n  // if so, we'll need to implement this properly. currently it doesn't work\n  // because account can only be initialized after the wallet is connected (which\n  // isn't necessarily after the base component mounts)\n  async componentDidMount() {\n    // await this.setupKeplr();\n\n    const account = \"test\"; //await this.secretjs.getAccount(this.state.account.address);\n    this.setState({ account });\n  }\n\n  async setupKeplr() {\n    // Define sleep\n    const sleep = (ms) => new Promise((accept) => setTimeout(accept, ms));\n\n    // Wait for Keplr to be injected to the page\n    while (\n      !window.keplr &&\n      !window.getOfflineSigner &&\n      !window.getEnigmaUtils\n    ) {\n      await sleep(10);\n    }\n\n    // TODO: stop using experimental chain\n    // Use a custom chain with Keplr.\n    // On mainnet we don't need this (`experimentalSuggestChain`).\n    // This works well with `enigmampc/secret-network-sw-dev`:\n    //     - https://hub.docker.com/r/enigmampc/secret-network-sw-dev\n    //     - Run a local chain: `docker run -it --rm -p 26657:26657 -p 26656:26656 -p 1337:1337 -v $(shell pwd):/root/code --name secretdev enigmampc/secret-network-sw-dev`\n    //     - `alias secretcli='docker exec -it secretdev secretcli'`\n    //     - Store a contract: `docker exec -it secretdev secretcli tx compute store /root/code/contract.wasm.gz --from a --gas 10000000 -b block -y`\n    // On holodeck, set:\n    //     1. CHAIN_ID = \"holodeck-2\"\n    //     2. rpc = \"ttp://chainofsecrets.secrettestnet.io:26657\"\n    //     3. rest = \"https://chainofsecrets.secrettestnet.io\"\n    //     4. chainName = Whatever you like\n    // For more examples, go to: https://github.com/chainapsis/keplr-example/blob/master/src/main.js\n    await window.keplr.experimentalSuggestChain({\n      chainId: CHAIN_ID,\n      chainName: \"holodeck-2\",\n      rpc: \"ttp://chainofsecrets.secrettestnet.io:26657\",\n      rest: \"https://chainofsecrets.secrettestnet.io\",\n      bip44: {\n        coinType: 529,\n      },\n      coinType: 529,\n      stakeCurrency: {\n        coinDenom: \"SCRT\",\n        coinMinimalDenom: \"uscrt\",\n        coinDecimals: 6,\n      },\n      bech32Config: {\n        bech32PrefixAccAddr: \"secret\",\n        bech32PrefixAccPub: \"secretpub\",\n        bech32PrefixValAddr: \"secretvaloper\",\n        bech32PrefixValPub: \"secretvaloperpub\",\n        bech32PrefixConsAddr: \"secretvalcons\",\n        bech32PrefixConsPub: \"secretvalconspub\",\n      },\n      currencies: [\n        {\n          coinDenom: \"SCRT\",\n          coinMinimalDenom: \"uscrt\",\n          coinDecimals: 6,\n        },\n      ],\n      feeCurrencies: [\n        {\n          coinDenom: \"SCRT\",\n          coinMinimalDenom: \"uscrt\",\n          coinDecimals: 6,\n        },\n      ],\n      gasPriceStep: {\n        low: 0.1,\n        average: 0.25,\n        high: 0.4,\n      },\n      features: [\"secretwasm\"],\n    });\n\n    // Enable Keplr.\n    // This pops-up a window for the user to allow keplr access to the webpage.\n    await window.keplr.enable(CHAIN_ID);\n\n    // Setup SecrtJS with Keplr's OfflineSigner\n    // This pops-up a window for the user to sign on each tx we sent\n    this.keplrOfflineSigner = window.getOfflineSigner(CHAIN_ID);\n    const accounts = await this.keplrOfflineSigner.getAccounts();\n\n    this.secretjs = new SigningCosmWasmClient(\n      // TODO: use an env variable here\n      \"https://chainofsecrets.secrettestnet.io\", // holodeck - https://chainofsecrets.secrettestnet.io; mainnet - user your LCD/REST provider local http://localhost:1337\n      accounts[0].address,\n      this.keplrOfflineSigner,\n      window.getEnigmaUtils(CHAIN_ID),\n      {\n        // 300k - Max gas units we're willing to use for init\n        init: {\n          amount: [{ amount: \"300000\", denom: \"uscrt\" }],\n          gas: \"300000\",\n        },\n        // 300k - Max gas units we're willing to use for exec\n        exec: {\n          amount: [{ amount: \"300000\", denom: \"uscrt\" }],\n          gas: \"300000\",\n        },\n      }\n    );\n\n    this.setState({ keplrReady: true, account: accounts[0] });\n  }\n\n  async onMint() {\n    try {\n      // 1. Define your metadata\n      const publicMetadata = \"No secrets here!\";\n      const privateMetadata = \"Ssshhhhhhh....\";\n\n      // 2. Mint a new token to yourself\n      const handleMsg = {\n        mint_nft: {\n          owner: this.address,\n          public_metadata: {\n            name: publicMetadata,\n          },\n          private_metadata: {\n            name: privateMetadata,\n          },\n        },\n      };\n      (async () => {\n        await window.keplr.enable(CHAIN_ID);\n        console.log(\"Minting yourself a nft\");\n        // TODO: use env variable for the contract address, like so\n        // .execute(process.env.SECRET_NFT_CONTRACT, handleMsg)\n        const response = await this.secretjs\n          .execute(\"secret1gwlhghp6a3pwc4a5nsw0ltua7mmqwdh4qy23qp\", handleMsg)\n          .catch((err) => {\n            throw new Error(`Could not execute contract: ${err}`);\n          });\n        console.log(\"response: \", response);\n\n        if (response.code !== undefined && response.code !== 0) {\n          alert(\"Failed to mint NFT: \" + response.log || response.rawLog);\n        } else {\n          alert(\n            \"NFT successfully minted: https://explorer.secrettestnet.io/transactions/\" +\n              response.transactionHash\n          );\n        }\n      })();\n    } catch (error) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      // TODO: handle errors\n      //   if (!error.msg) {\n      //     if (error.message.indexOf(\"0x138\")) {\n      //     } else if (error.message.indexOf(\"0x137\")) {\n      //       message = `SOLD OUT!`;\n      //     } else if (error.message.indexOf(\"0x135\")) {\n      //       message = `Insufficient funds to mint. Please fund your wallet.`;\n      //     }\n      //   } else {\n      //     if (error.code === 311) {\n      //       message = `SOLD OUT!`;\n      //       setIsSoldOut(true);\n      //     } else if (error.code === 312) {\n      //       message = `Minting period hasn't started yet.`;\n      //     }\n      //   }\n\n      //   setAlertState({\n      //     open: true,\n      //     message,\n      //     severity: \"error\",\n      //   });\n      // } finally {\n      //   setIsMinting(false);\n      // }\n    }\n  }\n\n  // TODO: break these components out into a more modular structure (low priority)\n  render() {\n    // TODO: set these dynamically (hi pri)\n    // true if there are no more NFTs\n    const isSoldOut = false;\n    // set based on viewport width\n    const isMobile = false;\n    const wallet = this.state.keplrReady;\n    // true if the user clicked the mint button and the tx has been\n    // sent, but not yet confirmed\n    const isMinting = false;\n    // mint is active (open)\n    const isActive = true;\n    // past start date\n    // const startDate = 1635213600000;\n    // future start date\n    const startDate = 1635213600000;\n    // number of NFTs left in the contract\n    const mintsRemaining = 100;\n    // if (!this.state.keplrReady) {\n    //   return (\n    //     <>\n    //       <h1>Waiting for Keplr wallet integration...</h1>\n    //     </>\n    //   );\n    // }\n\n    let account = <h1>Account: unknown</h1>;\n    if (this.state.account) {\n      account = <h1>Account: {this.state.account.address}</h1>;\n    }\n\n    let balance = <>Balance: 0 SCRT</>;\n    try {\n      balance = (\n        <>\n          Balance:{\" \"}\n          {new Intl.NumberFormat(\"en-US\", {}).format(\n            +this.state.account.balance[0].amount / 1e6\n          )}{\" \"}\n          SCRT\n        </>\n      );\n    } catch (e) {}\n\n    let renderCounter = ({ days, hours, minutes, seconds, completed }) => {\n      return (\n        <CounterText>\n          {days} days, {hours} hours, {minutes} minutes, {seconds} seconds\n        </CounterText>\n      );\n    };\n\n    return (\n      <>\n        <MintRoot>\n          <SmallSpacer />\n          {/* TODO: add real logos */}\n          {!isMobile ? (\n            <Logo src={mask} alt=\"mask\" />\n          ) : (\n            <Logo src={mask} alt=\"mask\" />\n          )}\n          {!isSoldOut ? (\n            <h1 className=\"font-link\">Mints Live on November 12, 2021</h1>\n          ) : (\n            <h1 className=\"font-link\">Minting is over</h1>\n          )}\n          {account}\n          {balance}\n          {!isMobile && (\n            <>\n              <Samples>\n                {<ImageContainer src={rabbit} alt=\"rabbit\" />}\n                {<ImageContainer src={rabbit} alt=\"rabbit\" />}\n                {<ImageContainer src={rabbit} alt=\"rabbit\" />}\n              </Samples>\n            </>\n          )}\n          {wallet && !isSoldOut && (\n            <Text>\n              <p className=\"font-link\">\n                1337 unique generative Redacted Rabbits.Secured by the SCRT\n                network, stored on Arweave, implemented with the SNIP-721\n                standard.\n              </p>\n            </Text>\n          )}\n\n          {wallet && (\n            <p className=\"font-link\">\n              Remaining amount: {(mintsRemaining || 0).toLocaleString()} / 1337\n            </p>\n          )}\n          {wallet ? (\n            <p className=\"font-link\">Mint: 42 SCRT</p>\n          ) : (\n            <h2 className=\"font-link\">\n              Connect wallet to mint a Redacted Rabbit\n            </h2>\n          )}\n          {!wallet ? (\n            <ConnectButton\n              onClick={async () => {\n                this.setupKeplr();\n              }}\n            >\n              <h3 className=\"font-link\">Connect Wallet</h3>\n            </ConnectButton>\n          ) : (\n            <MintButton\n              disabled={isSoldOut || isMinting || !isActive}\n              onClick={async () => {\n                await this.onMint();\n              }}\n              variant=\"contained\"\n            >\n              {isSoldOut ? (\n                <MintButtonText className=\"font-link\">SOLD OUT</MintButtonText>\n              ) : isActive ? (\n                isMinting ? (\n                  <CircularProgress />\n                ) : (\n                  <MintButtonText className=\"font-link\">MINT</MintButtonText>\n                )\n              ) : (\n                <Countdown\n                  date={startDate}\n                  // TODO: countdown should switch to mint at startDate time\n                  // onMount={({ completed }) => completed && setIsActive(true)}\n                  // onComplete={() => setIsActive(true)}\n                  onMount={({ completed }) => completed}\n                  onComplete={() => null}\n                  renderer={renderCounter}\n                />\n              )}\n            </MintButton>\n          )}\n\n          {isMobile && (\n            <>\n              <SmallSpacer />\n              <Samples>\n                {<ImageContainer src={rabbit} alt=\"rabbit\" />}\n                {<ImageContainer src={rabbit} alt=\"rabbit\" />}\n                {<ImageContainer src={rabbit} alt=\"rabbit\" />}\n              </Samples>\n            </>\n          )}\n\n          <Spacer />\n          {/* TODO: Add snackbar alerting upon mint */}\n          {/* <Snackbar\n            open={alertState.open}\n            autoHideDuration={6000}\n            onClose={() => setAlertState({ ...alertState, open: false })}\n          >\n            <Alert\n              onClose={() => setAlertState({ ...alertState, open: false })}\n              severity={alertState.severity}\n            >\n              {alertState.message}\n            </Alert>\n          </Snackbar> */}\n        </MintRoot>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}