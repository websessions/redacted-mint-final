{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromHex = exports.toHex = void 0;\n\nfunction toHex(data) {\n  var out = \"\";\n\n  var _iterator = _createForOfIteratorHelper(data),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var byte = _step.value;\n      out += (\"0\" + byte.toString(16)).slice(-2);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return out;\n}\n\nexports.toHex = toHex;\n\nfunction fromHex(hexstring) {\n  if (hexstring.length % 2 !== 0) {\n    throw new Error(\"hex string length must be a multiple of 2\");\n  }\n\n  var listOfInts = [];\n\n  for (var i = 0; i < hexstring.length; i += 2) {\n    var hexByteAsString = hexstring.substr(i, 2);\n\n    if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {\n      throw new Error(\"hex string contains invalid characters\");\n    }\n\n    listOfInts.push(parseInt(hexByteAsString, 16));\n  }\n\n  return new Uint8Array(listOfInts);\n}\n\nexports.fromHex = fromHex;","map":{"version":3,"sources":["../src/hex.ts"],"names":[],"mappings":";;;;;;;;;AAAA,SAAgB,KAAhB,CAAsB,IAAtB,EAAsC;AACpC,MAAI,GAAG,GAAG,EAAV;;AADoC,6CAEjB,IAFiB;AAAA;;AAAA;AAEpC,wDAAyB;AAAA,UAAd,IAAc;AACvB,MAAA,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,QAAL,CAAc,EAAd,CAAP,EAA0B,KAA1B,CAAgC,CAAC,CAAjC,CAAP;AACD;AAJmC;AAAA;AAAA;AAAA;AAAA;;AAKpC,SAAO,GAAP;AACD;;AAND,OAAA,CAAA,KAAA,GAAA,KAAA;;AAQA,SAAgB,OAAhB,CAAwB,SAAxB,EAAyC;AACvC,MAAI,SAAS,CAAC,MAAV,GAAmB,CAAnB,KAAyB,CAA7B,EAAgC;AAC9B,UAAM,IAAI,KAAJ,CAAU,2CAAV,CAAN;AACD;;AAED,MAAM,UAAU,GAAa,EAA7B;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,IAAI,CAA3C,EAA8C;AAC5C,QAAM,eAAe,GAAG,SAAS,CAAC,MAAV,CAAiB,CAAjB,EAAoB,CAApB,CAAxB;;AACA,QAAI,CAAC,eAAe,CAAC,KAAhB,CAAsB,cAAtB,CAAL,EAA4C;AAC1C,YAAM,IAAI,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,IAAA,UAAU,CAAC,IAAX,CAAgB,QAAQ,CAAC,eAAD,EAAkB,EAAlB,CAAxB;AACD;;AACD,SAAO,IAAI,UAAJ,CAAe,UAAf,CAAP;AACD;;AAdD,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromHex = exports.toHex = void 0;\nfunction toHex(data) {\n    let out = \"\";\n    for (const byte of data) {\n        out += (\"0\" + byte.toString(16)).slice(-2);\n    }\n    return out;\n}\nexports.toHex = toHex;\nfunction fromHex(hexstring) {\n    if (hexstring.length % 2 !== 0) {\n        throw new Error(\"hex string length must be a multiple of 2\");\n    }\n    const listOfInts = [];\n    for (let i = 0; i < hexstring.length; i += 2) {\n        const hexByteAsString = hexstring.substr(i, 2);\n        if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {\n            throw new Error(\"hex string contains invalid characters\");\n        }\n        listOfInts.push(parseInt(hexByteAsString, 16));\n    }\n    return new Uint8Array(listOfInts);\n}\nexports.fromHex = fromHex;\n//# sourceMappingURL=hex.js.map"]},"metadata":{},"sourceType":"script"}