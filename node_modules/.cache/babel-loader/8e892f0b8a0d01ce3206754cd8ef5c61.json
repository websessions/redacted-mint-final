{"ast":null,"code":"\"use strict\"; // tslint:disable:max-classes-per-file\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Thrown when ciphertext fails to verify as authentic */\n\nclass IntegrityError extends Error {\n  constructor(m) {\n    super(m);\n    Object.setPrototypeOf(this, IntegrityError.prototype);\n  }\n\n}\n\nexports.IntegrityError = IntegrityError;\n/** Thrown when we attempt to use an unsupported crypto algorithm via WebCrypto */\n\nclass NotImplementedError extends Error {\n  constructor(m) {\n    super(m);\n    Object.setPrototypeOf(this, NotImplementedError.prototype);\n  }\n\n}\n\nexports.NotImplementedError = NotImplementedError;","map":{"version":3,"sources":["/Users/aidansalzmann/redacted-mint/node_modules/miscreant/release/exceptions.js"],"names":["Object","defineProperty","exports","value","IntegrityError","Error","constructor","m","setPrototypeOf","prototype","NotImplementedError"],"mappings":"AAAA,a,CACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;AACA,MAAMC,cAAN,SAA6BC,KAA7B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,UAAMA,CAAN;AACAP,IAAAA,MAAM,CAACQ,cAAP,CAAsB,IAAtB,EAA4BJ,cAAc,CAACK,SAA3C;AACH;;AAJ8B;;AAMnCP,OAAO,CAACE,cAAR,GAAyBA,cAAzB;AACA;;AACA,MAAMM,mBAAN,SAAkCL,KAAlC,CAAwC;AACpCC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX,UAAMA,CAAN;AACAP,IAAAA,MAAM,CAACQ,cAAP,CAAsB,IAAtB,EAA4BE,mBAAmB,CAACD,SAAhD;AACH;;AAJmC;;AAMxCP,OAAO,CAACQ,mBAAR,GAA8BA,mBAA9B","sourcesContent":["\"use strict\";\n// tslint:disable:max-classes-per-file\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Thrown when ciphertext fails to verify as authentic */\nclass IntegrityError extends Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, IntegrityError.prototype);\n    }\n}\nexports.IntegrityError = IntegrityError;\n/** Thrown when we attempt to use an unsupported crypto algorithm via WebCrypto */\nclass NotImplementedError extends Error {\n    constructor(m) {\n        super(m);\n        Object.setPrototypeOf(this, NotImplementedError.prototype);\n    }\n}\nexports.NotImplementedError = NotImplementedError;\n"]},"metadata":{},"sourceType":"script"}