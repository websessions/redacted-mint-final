{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/aidansalzmann/redacted-mint/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar webcrypto_1 = require(\"./providers/webcrypto\");\n\nvar siv_1 = require(\"./siv\");\n/** AEAD interface provider for ISIVLike types */\n\n\nvar AEAD = /*#__PURE__*/function () {\n  function AEAD(siv) {\n    _classCallCheck(this, AEAD);\n\n    this._siv = siv;\n  }\n  /** Encrypt and authenticate data using AES-SIV */\n\n\n  _createClass(AEAD, [{\n    key: \"seal\",\n    value: function seal(plaintext, nonce) {\n      var associatedData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Uint8Array(0);\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this._siv.seal(plaintext, [associatedData, nonce]));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n    /** Decrypt and authenticate data using AES-SIV */\n\n  }, {\n    key: \"open\",\n    value: function open(ciphertext, nonce) {\n      var associatedData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Uint8Array(0);\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this._siv.open(ciphertext, [associatedData, nonce]));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n    /** Make a best effort to wipe memory used by this instance */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._siv.clear();\n\n      return this;\n    }\n  }], [{\n    key: \"importKey\",\n    value:\n    /** Create a new AEAD instance with the given key */\n    function importKey(keyData, alg) {\n      var provider = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new webcrypto_1.WebCryptoProvider();\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.t0 = AEAD;\n                _context3.next = 3;\n                return siv_1.SIV.importKey(keyData, alg, provider);\n\n              case 3:\n                _context3.t1 = _context3.sent;\n                return _context3.abrupt(\"return\", new _context3.t0(_context3.t1));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }]);\n\n  return AEAD;\n}();\n\nexports.AEAD = AEAD;","map":{"version":3,"sources":["/Users/aidansalzmann/redacted-mint/node_modules/miscreant/release/aead.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","webcrypto_1","require","siv_1","AEAD","siv","_siv","plaintext","nonce","associatedData","Uint8Array","seal","ciphertext","open","clear","keyData","alg","provider","WebCryptoProvider","SIV","importKey"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst webcrypto_1 = require(\"./providers/webcrypto\");\nconst siv_1 = require(\"./siv\");\n/** AEAD interface provider for ISIVLike types */\nclass AEAD {\n    /** Create a new AEAD instance with the given key */\n    static importKey(keyData, alg, provider = new webcrypto_1.WebCryptoProvider()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new AEAD(yield siv_1.SIV.importKey(keyData, alg, provider));\n        });\n    }\n    constructor(siv) {\n        this._siv = siv;\n    }\n    /** Encrypt and authenticate data using AES-SIV */\n    seal(plaintext, nonce, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._siv.seal(plaintext, [associatedData, nonce]);\n        });\n    }\n    /** Decrypt and authenticate data using AES-SIV */\n    open(ciphertext, nonce, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._siv.open(ciphertext, [associatedData, nonce]);\n        });\n    }\n    /** Make a best effort to wipe memory used by this instance */\n    clear() {\n        this._siv.clear();\n        return this;\n    }\n}\nexports.AEAD = AEAD;\n"]},"metadata":{},"sourceType":"script"}