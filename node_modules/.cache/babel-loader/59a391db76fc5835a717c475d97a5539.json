{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst webcrypto_1 = require(\"./providers/webcrypto\");\n\nconst siv_1 = require(\"./siv\");\n/** AEAD interface provider for ISIVLike types */\n\n\nclass AEAD {\n  /** Create a new AEAD instance with the given key */\n  static importKey(keyData, alg) {\n    let provider = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new webcrypto_1.WebCryptoProvider();\n    return __awaiter(this, void 0, void 0, function* () {\n      return new AEAD(yield siv_1.SIV.importKey(keyData, alg, provider));\n    });\n  }\n\n  constructor(siv) {\n    this._siv = siv;\n  }\n  /** Encrypt and authenticate data using AES-SIV */\n\n\n  seal(plaintext, nonce) {\n    let associatedData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Uint8Array(0);\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._siv.seal(plaintext, [associatedData, nonce]);\n    });\n  }\n  /** Decrypt and authenticate data using AES-SIV */\n\n\n  open(ciphertext, nonce) {\n    let associatedData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Uint8Array(0);\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._siv.open(ciphertext, [associatedData, nonce]);\n    });\n  }\n  /** Make a best effort to wipe memory used by this instance */\n\n\n  clear() {\n    this._siv.clear();\n\n    return this;\n  }\n\n}\n\nexports.AEAD = AEAD;","map":{"version":3,"sources":["/Users/aidansalzmann/redacted-mint/node_modules/miscreant/release/aead.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","webcrypto_1","require","siv_1","AEAD","importKey","keyData","alg","provider","WebCryptoProvider","SIV","constructor","siv","_siv","seal","plaintext","nonce","associatedData","Uint8Array","open","ciphertext","clear"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst webcrypto_1 = require(\"./providers/webcrypto\");\nconst siv_1 = require(\"./siv\");\n/** AEAD interface provider for ISIVLike types */\nclass AEAD {\n    /** Create a new AEAD instance with the given key */\n    static importKey(keyData, alg, provider = new webcrypto_1.WebCryptoProvider()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new AEAD(yield siv_1.SIV.importKey(keyData, alg, provider));\n        });\n    }\n    constructor(siv) {\n        this._siv = siv;\n    }\n    /** Encrypt and authenticate data using AES-SIV */\n    seal(plaintext, nonce, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._siv.seal(plaintext, [associatedData, nonce]);\n        });\n    }\n    /** Decrypt and authenticate data using AES-SIV */\n    open(ciphertext, nonce, associatedData = new Uint8Array(0)) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._siv.open(ciphertext, [associatedData, nonce]);\n        });\n    }\n    /** Make a best effort to wipe memory used by this instance */\n    clear() {\n        this._siv.clear();\n        return this;\n    }\n}\nexports.AEAD = AEAD;\n"]},"metadata":{},"sourceType":"script"}