{"ast":null,"code":"var _jsxFileName = \"/Users/aidansalzmann/button-minter/6_wallets/reactjs_keplr/secret-dapp/src/App.js\";\n// Run:\n// `npx create-react-app secret-dapp`\n// `cd secret-dapp`\n// `yarn add secretjs` (or `npm i secretjs`)\n// Then copy the content of this file into `src/App.js`\nimport React from \"react\";\nimport { SigningCosmWasmClient } from \"secretjs\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport rabbit from \"../public/rabbit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MintButton = styled(Button)`\n  align-items: center;\n  justify-content: center;\n  background: #ea70ff !important;\n`;\n_c = MintButton;\nconst ConnectButton = styled(WalletDialogButton)`\n  display: flex;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n`;\n_c2 = ConnectButton;\nconst CounterText = styled.span``; // add your styles here m8\n\nconst MintRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  margin: auto;\n  align-items: center;\n  justify-content: center;\n  background: #ffffff;\n  text-align: center;\n`;\n_c3 = MintRoot;\nconst MintButtonText = styled.div`\n  padding: 5px 50px;\n`;\n_c4 = MintButtonText;\nconst Spacer = styled.div`\n  padding: 5rem;\n`;\n_c5 = Spacer;\nconst SmallSpacer = styled.div`\n  padding: 0.75rem;\n`;\n_c6 = SmallSpacer;\nconst Trippy = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n  border-radius: 25px;\n  padding: 0.75rem;\n`;\n_c7 = Trippy;\nconst Samples = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n_c8 = Samples;\nconst Logo = styled.img`\n  max-width: 400px;\n  max-height: 400px;\n  @media only screen and (max-width: 600px) {\n    max-width: 250px;\n    max-height: 250px;\n  }\n`;\n_c9 = Logo;\nconst Text = styled.div`\n  max-width: 500px;\n`;\n_c10 = Text;\nconst CHIAN_ID = \"enigma-pub-testnet-3\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keplrReady: false,\n      account: null\n    };\n  }\n\n  async componentDidMount() {\n    await this.setupKeplr();\n    const account = await this.secretjs.getAccount(this.state.account.address);\n    this.setState({\n      account\n    });\n  }\n\n  async setupKeplr() {\n    // Define sleep\n    const sleep = ms => new Promise(accept => setTimeout(accept, ms)); // Wait for Keplr to be injected to the page\n\n\n    while (!window.keplr && !window.getOfflineSigner && !window.getEnigmaUtils) {\n      await sleep(10);\n    } // Use a custom chain with Keplr.\n    // On mainnet we don't need this (`experimentalSuggestChain`).\n    // This works well with `enigmampc/secret-network-sw-dev`:\n    //     - https://hub.docker.com/r/enigmampc/secret-network-sw-dev\n    //     - Run a local chain: `docker run -it --rm -p 26657:26657 -p 26656:26656 -p 1337:1337 -v $(shell pwd):/root/code --name secretdev enigmampc/secret-network-sw-dev`\n    //     - `alias secretcli='docker exec -it secretdev secretcli'`\n    //     - Store a contract: `docker exec -it secretdev secretcli tx compute store /root/code/contract.wasm.gz --from a --gas 10000000 -b block -y`\n    // On holodeck, set:\n    //     1. CHIAN_ID = \"holodeck-2\"\n    //     2. rpc = \"ttp://chainofsecrets.secrettestnet.io:26657\"\n    //     3. rest = \"https://chainofsecrets.secrettestnet.io\"\n    //     4. chainName = Whatever you like\n    // For more examples, go to: https://github.com/chainapsis/keplr-example/blob/master/src/main.js\n\n\n    await window.keplr.experimentalSuggestChain({\n      chainId: CHIAN_ID,\n      chainName: \"Local Secret Chain\",\n      rpc: \"http://localhost:26657\",\n      rest: \"http://localhost:1337\",\n      bip44: {\n        coinType: 529\n      },\n      coinType: 529,\n      stakeCurrency: {\n        coinDenom: \"SCRT\",\n        coinMinimalDenom: \"uscrt\",\n        coinDecimals: 6\n      },\n      bech32Config: {\n        bech32PrefixAccAddr: \"secret\",\n        bech32PrefixAccPub: \"secretpub\",\n        bech32PrefixValAddr: \"secretvaloper\",\n        bech32PrefixValPub: \"secretvaloperpub\",\n        bech32PrefixConsAddr: \"secretvalcons\",\n        bech32PrefixConsPub: \"secretvalconspub\"\n      },\n      currencies: [{\n        coinDenom: \"SCRT\",\n        coinMinimalDenom: \"uscrt\",\n        coinDecimals: 6\n      }],\n      feeCurrencies: [{\n        coinDenom: \"SCRT\",\n        coinMinimalDenom: \"uscrt\",\n        coinDecimals: 6\n      }],\n      gasPriceStep: {\n        low: 0.1,\n        average: 0.25,\n        high: 0.4\n      },\n      features: [\"secretwasm\"]\n    }); // Enable Keplr.\n    // This pops-up a window for the user to allow keplr access to the webpage.\n\n    await window.keplr.enable(CHIAN_ID); // Setup SecrtJS with Keplr's OfflineSigner\n    // This pops-up a window for the user to sign on each tx we sent\n\n    this.keplrOfflineSigner = window.getOfflineSigner(CHIAN_ID);\n    const accounts = await this.keplrOfflineSigner.getAccounts();\n    this.secretjs = new SigningCosmWasmClient(\"http://localhost:1337\", // holodeck - https://chainofsecrets.secrettestnet.io; mainnet - user your LCD/REST provider\n    accounts[0].address, this.keplrOfflineSigner, window.getEnigmaUtils(CHIAN_ID), {\n      // 300k - Max gas units we're willing to use for init\n      init: {\n        amount: [{\n          amount: \"300000\",\n          denom: \"uscrt\"\n        }],\n        gas: \"300000\"\n      },\n      // 300k - Max gas units we're willing to use for exec\n      exec: {\n        amount: [{\n          amount: \"300000\",\n          denom: \"uscrt\"\n        }],\n        gas: \"300000\"\n      }\n    });\n    this.setState({\n      keplrReady: true,\n      account: accounts[0]\n    });\n  }\n\n  render() {\n    if (!this.state.keplrReady) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Waiting for Keplr wallet integration...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n\n    let account = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account: unknown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }, this);\n\n    if (this.state.account) {\n      account = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Account: \", this.state.account.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this);\n    }\n\n    let balance = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Balance: 0 SCRT\"\n    }, void 0, false);\n\n    try {\n      balance = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Balance:\", \" \", new Intl.NumberFormat(\"en-US\", {}).format(+this.state.account.balance[0].amount / 1e6), \" \", \"SCRT\"]\n      }, void 0, true);\n    } catch (e) {} // TODO: set these dynamically\n\n\n    const isSoldOut = false;\n    const isMobile = false;\n    const wallet = this.state.keplrReady;\n    const isMinting = true;\n    const isActive = true;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [account, balance, /*#__PURE__*/_jsxDEV(MintButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MintRoot, {\n        children: [!isMobile ? /*#__PURE__*/_jsxDEV(Logo, {\n          src: rabbit,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Logo, {\n          src: rabbit,\n          alt: \"gorl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), !isSoldOut ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-link\",\n          children: \"Mints Live at 6pm PT!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-link\",\n          children: \"Minting is over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), !isMobile && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Samples, {\n            children: [/*#__PURE__*/_jsxDEV(Trippy, {\n              src: rabbit,\n              alt: \"skele\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Trippy, {\n              src: rabbit,\n              alt: \"hippie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Trippy, {\n              src: rabbit,\n              alt: \"shark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), wallet && !isSoldOut && /*#__PURE__*/_jsxDEV(Text, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-link\",\n            children: \"4444 unique generative Trippy Surfers. 3000 available in the public mint now. Secured by the Solana blockchain, stored on Arweave, implemented with candy machine and metaplex.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), wallet && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-link\",\n          children: [\"Remaining amount: \", (surfersRemaining || 0).toLocaleString(), \" / 3,000\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), wallet ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-link\",\n          children: \"Mint: 0.25 SOL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-link\",\n          children: \"Connect wallet to mint a Trippy Surfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), !wallet ? /*#__PURE__*/_jsxDEV(ConnectButton, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-link\",\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MintButton, {\n          disabled: isSoldOut || isMinting || !isActive,\n          onClick: onMint,\n          variant: \"contained\",\n          children: isSoldOut ? /*#__PURE__*/_jsxDEV(MintButtonText, {\n            className: \"font-link\",\n            children: \"SOLD OUT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this) : isActive ? isMinting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(MintButtonText, {\n            className: \"font-link\",\n            children: \"MINT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Countdown, {\n            date: startDate,\n            onMount: ({\n              completed\n            }) => completed && setIsActive(true),\n            onComplete: () => setIsActive(true),\n            renderer: renderCounter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), isMobile && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SmallSpacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Samples, {\n            children: [/*#__PURE__*/_jsxDEV(Trippy, {\n              src: rabbit,\n              alt: \"skele\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Trippy, {\n              src: rabbit,\n              alt: \"hippie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Trippy, {\n              src: rabbit,\n              alt: \"shark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"MintButton\");\n$RefreshReg$(_c2, \"ConnectButton\");\n$RefreshReg$(_c3, \"MintRoot\");\n$RefreshReg$(_c4, \"MintButtonText\");\n$RefreshReg$(_c5, \"Spacer\");\n$RefreshReg$(_c6, \"SmallSpacer\");\n$RefreshReg$(_c7, \"Trippy\");\n$RefreshReg$(_c8, \"Samples\");\n$RefreshReg$(_c9, \"Logo\");\n$RefreshReg$(_c10, \"Text\");","map":{"version":3,"sources":["/Users/aidansalzmann/button-minter/6_wallets/reactjs_keplr/secret-dapp/src/App.js"],"names":["React","SigningCosmWasmClient","useEffect","useState","styled","Countdown","Button","CircularProgress","Snackbar","Alert","rabbit","MintButton","ConnectButton","WalletDialogButton","CounterText","span","MintRoot","div","MintButtonText","Spacer","SmallSpacer","Trippy","img","Samples","Logo","Text","CHIAN_ID","App","Component","constructor","props","state","keplrReady","account","componentDidMount","setupKeplr","secretjs","getAccount","address","setState","sleep","ms","Promise","accept","setTimeout","window","keplr","getOfflineSigner","getEnigmaUtils","experimentalSuggestChain","chainId","chainName","rpc","rest","bip44","coinType","stakeCurrency","coinDenom","coinMinimalDenom","coinDecimals","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","feeCurrencies","gasPriceStep","low","average","high","features","enable","keplrOfflineSigner","accounts","getAccounts","init","amount","denom","gas","exec","render","balance","Intl","NumberFormat","format","e","isSoldOut","isMobile","wallet","isMinting","isActive","surfersRemaining","toLocaleString","onMint","startDate","completed","setIsActive","renderCounter"],"mappings":"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","sourcesContent":["// Run:\n// `npx create-react-app secret-dapp`\n// `cd secret-dapp`\n// `yarn add secretjs` (or `npm i secretjs`)\n// Then copy the content of this file into `src/App.js`\n\nimport React from \"react\";\nimport { SigningCosmWasmClient } from \"secretjs\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport rabbit from \"../public/rabbit\";\n\nconst MintButton = styled(Button)`\n  align-items: center;\n  justify-content: center;\n  background: #ea70ff !important;\n`;\nconst ConnectButton = styled(WalletDialogButton)`\n  display: flex;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CounterText = styled.span``; // add your styles here m8\n\nconst MintRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  margin: auto;\n  align-items: center;\n  justify-content: center;\n  background: #ffffff;\n  text-align: center;\n`;\n\nconst MintButtonText = styled.div`\n  padding: 5px 50px;\n`;\n\nconst Spacer = styled.div`\n  padding: 5rem;\n`;\n\nconst SmallSpacer = styled.div`\n  padding: 0.75rem;\n`;\n\nconst Trippy = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n  border-radius: 25px;\n  padding: 0.75rem;\n`;\n\nconst Samples = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nconst Logo = styled.img`\n  max-width: 400px;\n  max-height: 400px;\n  @media only screen and (max-width: 600px) {\n    max-width: 250px;\n    max-height: 250px;\n  }\n`;\n\nconst Text = styled.div`\n  max-width: 500px;\n`;\n\nconst CHIAN_ID = \"enigma-pub-testnet-3\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { keplrReady: false, account: null };\n  }\n\n  async componentDidMount() {\n    await this.setupKeplr();\n\n    const account = await this.secretjs.getAccount(this.state.account.address);\n    this.setState({ account });\n  }\n\n  async setupKeplr() {\n    // Define sleep\n    const sleep = (ms) => new Promise((accept) => setTimeout(accept, ms));\n\n    // Wait for Keplr to be injected to the page\n    while (\n      !window.keplr &&\n      !window.getOfflineSigner &&\n      !window.getEnigmaUtils\n    ) {\n      await sleep(10);\n    }\n\n    // Use a custom chain with Keplr.\n    // On mainnet we don't need this (`experimentalSuggestChain`).\n    // This works well with `enigmampc/secret-network-sw-dev`:\n    //     - https://hub.docker.com/r/enigmampc/secret-network-sw-dev\n    //     - Run a local chain: `docker run -it --rm -p 26657:26657 -p 26656:26656 -p 1337:1337 -v $(shell pwd):/root/code --name secretdev enigmampc/secret-network-sw-dev`\n    //     - `alias secretcli='docker exec -it secretdev secretcli'`\n    //     - Store a contract: `docker exec -it secretdev secretcli tx compute store /root/code/contract.wasm.gz --from a --gas 10000000 -b block -y`\n    // On holodeck, set:\n    //     1. CHIAN_ID = \"holodeck-2\"\n    //     2. rpc = \"ttp://chainofsecrets.secrettestnet.io:26657\"\n    //     3. rest = \"https://chainofsecrets.secrettestnet.io\"\n    //     4. chainName = Whatever you like\n    // For more examples, go to: https://github.com/chainapsis/keplr-example/blob/master/src/main.js\n    await window.keplr.experimentalSuggestChain({\n      chainId: CHIAN_ID,\n      chainName: \"Local Secret Chain\",\n      rpc: \"http://localhost:26657\",\n      rest: \"http://localhost:1337\",\n      bip44: {\n        coinType: 529,\n      },\n      coinType: 529,\n      stakeCurrency: {\n        coinDenom: \"SCRT\",\n        coinMinimalDenom: \"uscrt\",\n        coinDecimals: 6,\n      },\n      bech32Config: {\n        bech32PrefixAccAddr: \"secret\",\n        bech32PrefixAccPub: \"secretpub\",\n        bech32PrefixValAddr: \"secretvaloper\",\n        bech32PrefixValPub: \"secretvaloperpub\",\n        bech32PrefixConsAddr: \"secretvalcons\",\n        bech32PrefixConsPub: \"secretvalconspub\",\n      },\n      currencies: [\n        {\n          coinDenom: \"SCRT\",\n          coinMinimalDenom: \"uscrt\",\n          coinDecimals: 6,\n        },\n      ],\n      feeCurrencies: [\n        {\n          coinDenom: \"SCRT\",\n          coinMinimalDenom: \"uscrt\",\n          coinDecimals: 6,\n        },\n      ],\n      gasPriceStep: {\n        low: 0.1,\n        average: 0.25,\n        high: 0.4,\n      },\n      features: [\"secretwasm\"],\n    });\n\n    // Enable Keplr.\n    // This pops-up a window for the user to allow keplr access to the webpage.\n    await window.keplr.enable(CHIAN_ID);\n\n    // Setup SecrtJS with Keplr's OfflineSigner\n    // This pops-up a window for the user to sign on each tx we sent\n    this.keplrOfflineSigner = window.getOfflineSigner(CHIAN_ID);\n    const accounts = await this.keplrOfflineSigner.getAccounts();\n\n    this.secretjs = new SigningCosmWasmClient(\n      \"http://localhost:1337\", // holodeck - https://chainofsecrets.secrettestnet.io; mainnet - user your LCD/REST provider\n      accounts[0].address,\n      this.keplrOfflineSigner,\n      window.getEnigmaUtils(CHIAN_ID),\n      {\n        // 300k - Max gas units we're willing to use for init\n        init: {\n          amount: [{ amount: \"300000\", denom: \"uscrt\" }],\n          gas: \"300000\",\n        },\n        // 300k - Max gas units we're willing to use for exec\n        exec: {\n          amount: [{ amount: \"300000\", denom: \"uscrt\" }],\n          gas: \"300000\",\n        },\n      }\n    );\n\n    this.setState({ keplrReady: true, account: accounts[0] });\n  }\n\n  render() {\n    if (!this.state.keplrReady) {\n      return (\n        <>\n          <h1>Waiting for Keplr wallet integration...</h1>\n        </>\n      );\n    }\n\n    let account = <h1>Account: unknown</h1>;\n    if (this.state.account) {\n      account = <h1>Account: {this.state.account.address}</h1>;\n    }\n\n    let balance = <>Balance: 0 SCRT</>;\n    try {\n      balance = (\n        <>\n          Balance:{\" \"}\n          {new Intl.NumberFormat(\"en-US\", {}).format(\n            +this.state.account.balance[0].amount / 1e6\n          )}{\" \"}\n          SCRT\n        </>\n      );\n    } catch (e) {}\n\n    // TODO: set these dynamically\n    const isSoldOut = false;\n    const isMobile = false;\n    const wallet = this.state.keplrReady;\n    const isMinting = true;\n    const isActive = true;\n\n    return (\n      <>\n        {account}\n        {balance}\n        <MintButton />\n        <MintRoot>\n          {/* TODO: add real logos */}\n          {!isMobile ? (\n            <Logo src={rabbit} alt=\"logo\" />\n          ) : (\n            <Logo src={rabbit} alt=\"gorl\" />\n          )}\n          {!isSoldOut ? (\n            <h1 className=\"font-link\">Mints Live at 6pm PT!</h1>\n          ) : (\n            <h1 className=\"font-link\">Minting is over</h1>\n          )}\n          {!isMobile && (\n            <>\n              <Samples>\n                {<Trippy src={rabbit} alt=\"skele\" />}\n                {<Trippy src={rabbit} alt=\"hippie\" />}\n                {<Trippy src={rabbit} alt=\"shark\" />}\n              </Samples>\n            </>\n          )}\n          {wallet && !isSoldOut && (\n            <Text>\n              <p className=\"font-link\">\n                4444 unique generative Trippy Surfers. 3000 available in the\n                public mint now. Secured by the Solana blockchain, stored on\n                Arweave, implemented with candy machine and metaplex.\n              </p>\n            </Text>\n          )}\n\n          {wallet && (\n            <p className=\"font-link\">\n              Remaining amount: {(surfersRemaining || 0).toLocaleString()} /\n              3,000\n            </p>\n          )}\n          {wallet ? (\n            <p className=\"font-link\">Mint: 0.25 SOL</p>\n          ) : (\n            <h2 className=\"font-link\">\n              Connect wallet to mint a Trippy Surfer\n            </h2>\n          )}\n          {!wallet ? (\n            <ConnectButton>\n              <h3 className=\"font-link\">Connect Wallet</h3>\n            </ConnectButton>\n          ) : (\n            <MintButton\n              disabled={isSoldOut || isMinting || !isActive}\n              onClick={onMint}\n              variant=\"contained\"\n            >\n              {isSoldOut ? (\n                <MintButtonText className=\"font-link\">SOLD OUT</MintButtonText>\n              ) : isActive ? (\n                isMinting ? (\n                  <CircularProgress />\n                ) : (\n                  <MintButtonText className=\"font-link\">MINT</MintButtonText>\n                )\n              ) : (\n                <Countdown\n                  date={startDate}\n                  onMount={({ completed }) => completed && setIsActive(true)}\n                  onComplete={() => setIsActive(true)}\n                  renderer={renderCounter}\n                />\n              )}\n            </MintButton>\n          )}\n\n          {isMobile && (\n            <>\n              <SmallSpacer />\n              <Samples>\n                {<Trippy src={rabbit} alt=\"skele\" />}\n                {<Trippy src={rabbit} alt=\"hippie\" />}\n                {<Trippy src={rabbit} alt=\"shark\" />}\n              </Samples>\n            </>\n          )}\n\n          <Spacer />\n          {/* TODO: Add snackbar alerting on mint */}\n          {/* <Snackbar\n            open={alertState.open}\n            autoHideDuration={6000}\n            onClose={() => setAlertState({ ...alertState, open: false })}\n          >\n            <Alert\n              onClose={() => setAlertState({ ...alertState, open: false })}\n              severity={alertState.severity}\n            >\n              {alertState.message}\n            </Alert>\n          </Snackbar> */}\n        </MintRoot>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}